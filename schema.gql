# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type SalesInvoiceVat {
  id: Float!
  updtTs: DateTime!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  invoice: SalesInvoice!
  vatRatePercent: Float!
  vatTotalAccountingSchemeCurrencyRaw: Float!
  vatTotalRaw: Float!
  vatTotalAccountingSchemeCurrency: Float!
  vatTotal: Float!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type SalesInvoice {
  id: Float!
  updtTs: DateTime!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  bankAccount: BankAccount!
  dueDate: DateTime!
  issuedOn: DateTime!
  organization: Organization!
  currency: Currency!
  customer: Customer!
  documentNo: String
  isDraft: Boolean!
  isCalculated: Boolean!
  grandTotal: Float!
  lines: [SalesInvoiceLine!]
  totalLines: Float!
  totalLinesAccountingSchemeCurrency: Float!
  grandTotalAccountingSchemeCurrency: Float!
  currencyMultiplyingRateToAccountingSchemeCurrency: Float!
  transactionDate: DateTime!
  vatReport: [SalesInvoiceVat!]
  printDate: DateTime
  printed: Boolean!
  printError: String
  content: String
  paymentTermInDays: Float!
  reverseCharge: Boolean!
}

type Currency {
  id: Float!
  updtTs: DateTime!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  isoCode: String!
  currencyRatesFrom: [CurrencyRate!]
  currencyRatesTo: [CurrencyRate!]
}

type Organization {
  id: Float!
  updtTs: DateTime!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  contact: String!
  legalAddress: Address!
  legalName: String!
  registration: String!
  idNumber: String!
  bankAccount: BankAccount!
  salesInvoices: [SalesInvoice!]
  vatNumber: String
  accountingScheme: AccountingScheme!
  documentNumberSequences: [DocumentNumberSequence!]
}

type AccountingScheme {
  id: Float!
  updtTs: DateTime!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  currency: Currency!
}

type Country {
  id: Float!
  updtTs: DateTime!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  isoCode: String!
  addresses: [Address!]
}

type Customer {
  id: Float!
  updtTs: DateTime!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  legalAddress: Address!
  legalName: String!
  vatNumber: String
  salesInvoices: [SalesInvoice!]
  invoicingEmail: String!
  idNumber: String!
}

type Address {
  id: Float!
  updtTs: DateTime!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  country: Country!
  line1: String!
  city: String!
  zipCode: String!
  organizationRegisteredAddresses: [Organization!]
  customerRegistratedAddresses: [Customer!]
}

type Bank {
  id: Float!
  updtTs: DateTime!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  bankIdentifierCode: String!
  bankAccounts: [BankAccount!]
}

type BankAccount {
  id: Float!
  updtTs: DateTime!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  iban: String!
  swift: String!
  bank: Bank!
  bankAccountCustomerPrintableNumber: String!
  salesInvoices: [SalesInvoice!]
  organizations: [Organization!]
}

type CurrencyRate {
  id: Float!
  updtTs: DateTime!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  currencyMultiplyingRate: Float!
  end: DateTime!
  from: Currency!
  start: DateTime!
  to: Currency!
}

type DocumentNumberSequence {
  id: Float!
  updtTs: DateTime!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  forType: String!
  current: Float!
  organization: Organization!
}

type Tax {
  id: Float!
  updtTs: DateTime!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  ratePercent: Float!
  isStandard: Boolean!
}

type SalesInvoiceLine {
  id: Float!
  updtTs: DateTime!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  lineOrder: Float!
  lineTax: Tax!
  linePrice: Float!
  product: Product!
  quantity: Float!
  invoice: SalesInvoice!
  narration: String!
}

type Product {
  id: Float!
  updtTs: DateTime!
  updtOpId: Float!
  isActive: Boolean!
  isCurrent: Boolean!
  displayName: String!
  salesInvoiceLine: [SalesInvoiceLine!]
  sku: String!
}

type Query {
  now: UniversalDateTime!
}

scalar UniversalDateTime

type Mutation {
  keepAlive(clientId: String!): UniversalDateTime!
}
